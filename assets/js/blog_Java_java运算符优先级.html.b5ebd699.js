"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[5556],{6229:(t,i,s)=>{s.r(i),s.d(i,{comp:()=>l,data:()=>n});var e=s(641);const a={},l=(0,s(6262).A)(a,[["render",function(t,i){return(0,e.uX)(),(0,e.CE)("div",null,i[0]||(i[0]=[(0,e.Fv)('<table><thead><tr><th style="text-align:left;">优先级</th><th style="text-align:left;">运算符</th><th style="text-align:left;">结合性</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>()</code>、<code>[]</code>、 <code>.</code></td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><code>!</code> 、<code>+</code>（正）、<code> -</code>（负）、 <code>~</code>、 <code>++</code> 、<code>—</code></td><td style="text-align:left;">从右向左</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><code>*</code> 、<code>/ </code>、<code>%</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><code>+</code>(加) 、<code>-</code>(减)</td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><code>&lt;&lt;</code> 、<code>&gt;&gt;</code>、 <code>&gt;&gt;&gt;</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;"><code>&lt; </code>、<code>&lt;=</code> 、<code>&gt;</code> 、<code>&gt;= </code>、 <code>instanceof</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;"><code>==</code> 、<code>!=</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">8</td><td style="text-align:left;"><code>&amp;</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">9</td><td style="text-align:left;"><code>^</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">10</td><td style="text-align:left;"><code>｜</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">11</td><td style="text-align:left;"><code>&amp;&amp;</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">12</td><td style="text-align:left;"><code>｜｜</code></td><td style="text-align:left;">从左向右</td></tr><tr><td style="text-align:left;">13</td><td style="text-align:left;"><code>?:</code></td><td style="text-align:left;">从右向左</td></tr><tr><td style="text-align:left;">14</td><td style="text-align:left;"><code>=</code> 、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code>、<code>&amp;=</code>、<code>｜=</code>、<code>^=</code>、<code>~=</code>、<code>&lt;&lt;=</code>、<code>&gt;&gt;=</code>、<code>&gt;&gt;&gt;=</code></td><td style="text-align:left;">从右向左</td></tr></tbody></table><ul><li>优先级：优先级越小的先进行运算</li><li>结合性：相同优先级的多个运算符如何组合。</li></ul><p>示例一、优先级和结合性：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 优先级：* 大于 +、-</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 表达式等价于 a + (b * c) - d</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 再按左结合组合：(a + (b * c)) - d</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例二、结合性常见误区：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> flag </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 编译错误！Java不支持链式比较</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 正确写法：boolean flag = a &lt; b &amp;&amp; b &lt; c;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>示例三、嵌套三元运算符:</p><div class="language-java\u2028int line-numbers-mode" data-highlighter="shiki" data-ext="java\u2028int" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java\u2028int"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//  优化显式使用括号：</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> val2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (c </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> e)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//  再优化变量接收更合适</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> one </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  (c </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> d </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> e)；</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> val3 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> one；</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例四、一元运算符常见误区:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">++;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;I:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">i);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 7</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一般初学者肯能会认为a=13，应为i++和++i的优先级大于+，虽然 ++i 和 i++ 的优先级高于 +，但i++自增副作用是在返回值之后发生的，也就是先返回i。比如如下代码:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> h </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">++;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;i:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">i);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 2</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;h:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',12)]))}]]),n=JSON.parse('{"path":"/blog/Java/java%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7.html","title":"java运算符优先级","lang":"zh-CN","frontmatter":{"icon":"file-lines","title":"java运算符优先级","author":"Ms.Zyh","date":"2022-04-21T00:00:00.000Z","category":["Java"],"tag":["基础","Java"],"sticky":false,"star":false,"description":"优先级：优先级越小的先进行运算 结合性：相同优先级的多个运算符如何组合。 示例一、优先级和结合性： 示例二、结合性常见误区： 示例三、嵌套三元运算符: 示例四、一元运算符常见误区: 一般初学者肯能会认为a=13，应为i++和++i的优先级大于+，虽然 ++i 和 i++ 的优先级高于 +，但i++自增副作用是在返回值之后发生的，也就是先返回i。比如如下代码:","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"java运算符优先级\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-21T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-06T08:18:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ms.Zyh\\"}]}"],["meta",{"property":"og:url","content":"http://img.zouyh.top/blog/Java/java%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"Mr.Zyh"}],["meta",{"property":"og:title","content":"java运算符优先级"}],["meta",{"property":"og:description","content":"优先级：优先级越小的先进行运算 结合性：相同优先级的多个运算符如何组合。 示例一、优先级和结合性： 示例二、结合性常见误区： 示例三、嵌套三元运算符: 示例四、一元运算符常见误区: 一般初学者肯能会认为a=13，应为i++和++i的优先级大于+，虽然 ++i 和 i++ 的优先级高于 +，但i++自增副作用是在返回值之后发生的，也就是先返回i。比如如下代码:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-06T08:18:22.000Z"}],["meta",{"property":"article:author","content":"Ms.Zyh"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2022-04-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-06T08:18:22.000Z"}]]},"git":{"createdTime":1755935409000,"updatedTime":1757146702000,"contributors":[{"name":"zyh1020","username":"zyh1020","email":"898362059@qq.pcom","commits":2,"url":"https://github.com/zyh1020"}]},"readingTime":{"minutes":1.55,"words":464},"filePathRelative":"blog/Java/java运算符优先级.md","excerpt":"<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">优先级</th>\\n<th style=\\"text-align:left\\">运算符</th>\\n<th style=\\"text-align:left\\">结合性</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">1</td>\\n<td style=\\"text-align:left\\"><code>()</code>、<code>[]</code>、 <code>.</code></td>\\n<td style=\\"text-align:left\\">从左到右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">2</td>\\n<td style=\\"text-align:left\\"><code>!</code> 、<code>+</code>（正）、<code> -</code>（负）、 <code>~</code>、 <code>++</code> 、<code>—</code></td>\\n<td style=\\"text-align:left\\">从右向左</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">3</td>\\n<td style=\\"text-align:left\\"><code>*</code> 、<code>/ </code>、<code>%</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">4</td>\\n<td style=\\"text-align:left\\"><code>+</code>(加) 、<code>-</code>(减)</td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">5</td>\\n<td style=\\"text-align:left\\"><code>&lt;&lt;</code> 、<code>&gt;&gt;</code>、 <code>&gt;&gt;&gt;</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">6</td>\\n<td style=\\"text-align:left\\"><code>&lt; </code>、<code>&lt;=</code> 、<code>&gt;</code> 、<code>&gt;= </code>、 <code>instanceof</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">7</td>\\n<td style=\\"text-align:left\\"><code>==</code> 、<code>!=</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">8</td>\\n<td style=\\"text-align:left\\"><code>&amp;</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">9</td>\\n<td style=\\"text-align:left\\"><code>^</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">10</td>\\n<td style=\\"text-align:left\\"><code>｜</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">11</td>\\n<td style=\\"text-align:left\\"><code>&amp;&amp;</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">12</td>\\n<td style=\\"text-align:left\\"><code>｜｜</code></td>\\n<td style=\\"text-align:left\\">从左向右</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">13</td>\\n<td style=\\"text-align:left\\"><code>?:</code></td>\\n<td style=\\"text-align:left\\">从右向左</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">14</td>\\n<td style=\\"text-align:left\\"><code>=</code> 、<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>、<code>%=</code>、<code>&amp;=</code>、<code>｜=</code>、<code>^=</code>、<code>~=</code>、<code>&lt;&lt;=</code>、<code>&gt;&gt;=</code>、<code>&gt;&gt;&gt;=</code></td>\\n<td style=\\"text-align:left\\">从右向左</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}')}}]);