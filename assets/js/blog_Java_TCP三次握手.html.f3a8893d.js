"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[8349],{477:(t,e,r)=>{r.r(e),r.d(e,{comp:()=>n,data:()=>o});var A=r(641);const a={},n=(0,r(6262).A)(a,[["render",function(t,e){return(0,A.uX)(),(0,A.CE)("div",null,e[0]||(e[0]=[(0,A.Fv)("<p>假设两个人A、B两个情报员，需要通过书信交流情报。AB双方想要真正交流情报，首先需要建立交流渠道、需要确保自己能发（SYN）且别人能收（ACK）：<br> 二次握手：<br> A：“你能收到我写的信吗？”（A:SYN）<br> B：“我能收到你写的信！你能收到我写的信吗？”（B:ACK-B:SYN）<br> 三次握手：<br> A：“你能收到我写的信吗？”（A:SYN）<br> B：“我能收到你写的信！你能收到我写的信吗？”（B:ACK-B:SYN）<br> A：“我也能收到！”（A:ACK）<br> 四次握手：<br> A：“你能收到我写的信吗？”（A:SYN）<br> B：“我能收到你写的信！”（B:ACK）<br> B：“你能收到我写的信吗？”（B:SYN）<br> A：“我也能收到！”（A:ACK）<br> 好的，我们现在解释一下常见的问题。<br> 问题1:为什么TCP二次握手不可以？<br> 根据二次握手中A和B的交流、可以发现A可以确定自己能发（SYN）、B能收（ACK），但是B只能确定自己能发（SYN），A能不能收（ACK）到这就不确定了。试想一下你和你朋友写信，一直没收到朋友的回信，你还会继续写下去吗，你会怀疑自己是不是发的地址不对，或者朋友没有收到信，再说写下去也是白写，平白浪费时间。<br> 问题2:为什么不是四次握手？<br> 根据四次握手中A和B的交流、可以发现A可以确定自己能发（SYN）、B能收（ACK），B也能确定自己能发（SYN），A能收（ACK）到。那为什么不采用四次握手？因为B家没钱，为了节省钱，就写了一封信做了两件事，回答朋友的问题并问出自己的问题。</p>",1)]))}]]),o=JSON.parse('{"path":"/blog/Java/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.html","title":"TCP三次握手","lang":"zh-CN","frontmatter":{"icon":"file-lines","title":"TCP三次握手","author":"Ms.Zyh","date":"2022-05-26T00:00:00.000Z","category":["Java"],"tag":["干货","Java"],"sticky":false,"star":false,"description":"假设两个人A、B两个情报员，需要通过书信交流情报。AB双方想要真正交流情报，首先需要建立交流渠道、需要确保自己能发（SYN）且别人能收（ACK）： 二次握手： A：“你能收到我写的信吗？”（A:SYN） B：“我能收到你写的信！你能收到我写的信吗？”（B:ACK-B:SYN） 三次握手： A：“你能收到我写的信吗？”（A:SYN） B：“我能收到你写的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TCP三次握手\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-06T08:18:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ms.Zyh\\"}]}"],["meta",{"property":"og:url","content":"http://img.zouyh.top/vuepress/blog/Java/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.html"}],["meta",{"property":"og:site_name","content":"Mr.Zyh"}],["meta",{"property":"og:title","content":"TCP三次握手"}],["meta",{"property":"og:description","content":"假设两个人A、B两个情报员，需要通过书信交流情报。AB双方想要真正交流情报，首先需要建立交流渠道、需要确保自己能发（SYN）且别人能收（ACK）： 二次握手： A：“你能收到我写的信吗？”（A:SYN） B：“我能收到你写的信！你能收到我写的信吗？”（B:ACK-B:SYN） 三次握手： A：“你能收到我写的信吗？”（A:SYN） B：“我能收到你写的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-06T08:18:22.000Z"}],["meta",{"property":"article:author","content":"Ms.Zyh"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"干货"}],["meta",{"property":"article:published_time","content":"2022-05-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-06T08:18:22.000Z"}]]},"git":{"createdTime":1755935409000,"updatedTime":1757146702000,"contributors":[{"name":"zyh1020","username":"zyh1020","email":"898362059@qq.pcom","commits":2,"url":"https://github.com/zyh1020"}]},"readingTime":{"minutes":1.77,"words":531},"filePathRelative":"blog/Java/TCP三次握手.md","excerpt":"<p>假设两个人A、B两个情报员，需要通过书信交流情报。AB双方想要真正交流情报，首先需要建立交流渠道、需要确保自己能发（SYN）且别人能收（ACK）：<br>\\n二次握手：<br>\\nA：“你能收到我写的信吗？”（A:SYN）<br>\\nB：“我能收到你写的信！你能收到我写的信吗？”（B:ACK-B:SYN）<br>\\n三次握手：<br>\\nA：“你能收到我写的信吗？”（A:SYN）<br>\\nB：“我能收到你写的信！你能收到我写的信吗？”（B:ACK-B:SYN）<br>\\nA：“我也能收到！”（A:ACK）<br>\\n四次握手：<br>\\nA：“你能收到我写的信吗？”（A:SYN）<br>\\nB：“我能收到你写的信！”（B:ACK）<br>\\nB：“你能收到我写的信吗？”（B:SYN）<br>\\nA：“我也能收到！”（A:ACK）<br>\\n好的，我们现在解释一下常见的问题。<br>\\n问题1:为什么TCP二次握手不可以？<br>\\n根据二次握手中A和B的交流、可以发现A可以确定自己能发（SYN）、B能收（ACK），但是B只能确定自己能发（SYN），A能不能收（ACK）到这就不确定了。试想一下你和你朋友写信，一直没收到朋友的回信，你还会继续写下去吗，你会怀疑自己是不是发的地址不对，或者朋友没有收到信，再说写下去也是白写，平白浪费时间。<br>\\n问题2:为什么不是四次握手？<br>\\n根据四次握手中A和B的交流、可以发现A可以确定自己能发（SYN）、B能收（ACK），B也能确定自己能发（SYN），A能收（ACK）到。那为什么不采用四次握手？因为B家没钱，为了节省钱，就写了一封信做了两件事，回答朋友的问题并问出自己的问题。</p>","autoDesc":true}')}}]);